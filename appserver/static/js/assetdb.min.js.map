{"version":3,"sources":["src/assetdb.js"],"names":["require","_","$","mvc","SearchManager","Modal","TextInput","RadioInput","SpinnerInput","MultiSelectInput","$el","d","ENDPOINT_BASE","SERVICE","createService","getConf","endpoint","path","get","err","results","promise","setConf","data","post","editAddField","_field$content","_field$content2","_field$content3","_field$content4","_field$content5","_field$content6","_field$content7","_field$content8","_field$content9","_field$content10","field","arguments","length","undefined","fieldNameInput","id","label","editable","name","value","keyFieldInput","choices","content","key_field","help","disable","caseSensitiveInput","case_sensitive","ignoreValuesInput","ignore_values","fillnullInput","fillnull","typeInput","type","parseInt","mergeMethodInput","merge_method","mergeOrderInput","merge_order","spinnerInput","max_values","evalExpInput","eval_expression","$form","append","getInput","getValue","hide","concat","show","mergeMethod","$input","on","e","setValue","enable","editAddModal","wide","title","primaryButton","onRemove","Components","getInstance","getId","dispose","onPrimaryBtnClick","_this","this","isEditable","test","setError","when","done","buildTable","setBody","deleteField","deleteModal","_this2","deferred","del","resolve","delConf","$body","html","$button","appendTo","fields","JSON","parse","entry","$table","forEach","isKey","caseSensitive","$tr","$dl","next","find","toggle","toggleClass","preEval","stats","postEval","keys","table","ignoreValues","maxValues","push","ignoreValuesMerge","split","map","join","mergeOrderArray","preEvalMerge","lookup","statsMerge","postEvalMerge","console","log","search","k"],"mappings":"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","sourcesContent":["//# sourceURL=asset_base.js\n\nrequire([\n\t'underscore',\n\t'jquery',\n\t'splunkjs/mvc',\n\t'splunkjs/mvc/searchmanager',\n\t'/static/app/assetdb/js/modal.min.js',\n\t'/static/app/assetdb/js/textInput.min.js',\n\t'/static/app/assetdb/js/radioInput.min.js',\n\t'/static/app/assetdb/js/spinnerInput.min.js',\n\t'/static/app/assetdb/js/multiselectInput.min.js',\n\t'splunkjs/mvc/simplexml/ready!',\n], function (_, $, mvc, SearchManager, Modal, TextInput, RadioInput, SpinnerInput, MultiSelectInput) {\n\t$el = $('#ab_config');\n\tconst ENDPOINT_BASE = '/servicesNS/nobody/assetdb/configs/';\n\tconst SERVICE = mvc.createService();\n\n\tfunction getConf(endpoint) {\n\t\tlet path = ENDPOINT_BASE + endpoint;\n\t\tlet deferred = SERVICE.get(path, {}, function (err, results) {});\n\t\treturn deferred.promise();\n\t}\n\n\tfunction setConf(endpoint, data) {\n\t\tlet path = ENDPOINT_BASE + endpoint;\n\t\tlet deferred = SERVICE.post(path, data, function (err, results) {});\n\t\treturn deferred.promise();\n\t}\n\n\tfunction delConf(endpoint) {\n\t\tlet path = ENDPOINT_BASE + endpoint;\n\t\tlet deferred = SERVICE.del(path, function (err, results) {\n\t\t\tdeferred.resolve(results);\n\t\t});\n\t\treturn deferred.promise();\n\t}\n\n\tfunction editAddField(field = {}) {\n\t\tlet fieldNameInput = new TextInput({\n\t\t\tid: 'inputFieldName',\n\t\t\tlabel: 'Field Name',\n\t\t\teditable: field?.name ? false : true,\n\t\t\tvalue: field?.name || '',\n\t\t});\n\n\t\tlet keyFieldInput = new RadioInput({\n\t\t\tid: 'inputKeyField',\n\t\t\tlabel: 'Key Field',\n\t\t\tchoices: [\n\t\t\t\t{ label: 'Yes', value: 1 },\n\t\t\t\t{ label: 'No', value: 0 },\n\t\t\t],\n\t\t\tvalue: field?.content?.key_field || 0,\n\t\t\thelp: 'Key fields define a unique asset',\n\t\t});\n\n\t\tif (field?.content?.default) keyFieldInput.disable();\n\n\t\tlet caseSensitiveInput = new RadioInput({\n\t\t\tid: 'inputCaseSensitive',\n\t\t\tlabel: 'Case Sensitive',\n\t\t\tchoices: [\n\t\t\t\t{ label: 'Yes', value: 1 },\n\t\t\t\t{ label: 'No', value: 0 },\n\t\t\t],\n\t\t\tvalue: field?.content?.case_sensitive || 0,\n\t\t\thelp: 'If No, field values are converted to lowercase',\n\t\t});\n\n\t\tlet ignoreValuesInput = new TextInput({\n\t\t\tid: 'inputIgnoreValues',\n\t\t\tlabel: 'Ignore Values',\n\t\t\tvalue: field?.content?.ignore_values || '',\n\t\t\thelp: '[Optional] A comma separated list of values to ignore',\n\t\t});\n\n\t\tlet fillnullInput = new TextInput({\n\t\t\tid: 'inputFillnull',\n\t\t\tlabel: 'Fill Null',\n\t\t\tvalue: field?.content?.fillnull || '',\n\t\t\thelp: '[Optional] Fill null entries with a static value',\n\t\t});\n\n\t\tlet typeInput = new RadioInput({\n\t\t\tid: 'inputType',\n\t\t\tlabel: 'Type',\n\t\t\tchoices: [\n\t\t\t\t{ label: 'Single', value: 'single' },\n\t\t\t\t{ label: 'Multivalue', value: 'multivalue' },\n\t\t\t\t{ label: 'Eval', value: 'eval' },\n\t\t\t],\n\t\t\tvalue: field?.content?.type || 'single',\n\t\t\thelp: 'Use a single value, keep all unique entries as a multivalue, or use an eval expression to define this field',\n\t\t});\n\n\t\tif (!parseInt(field.content.key_field)) typeInput.disable();\n\n\t\tlet mergeMethodInput = new RadioInput({\n\t\t\tid: 'inputMergeMethod',\n\t\t\tlabel: 'Merge Method',\n\t\t\tchoices: [\n\t\t\t\t{ label: 'Latest', value: 'latest' },\n\t\t\t\t{ label: 'Coalesce', value: 'coalesce' },\n\t\t\t],\n\t\t\tvalue: field?.content?.merge_method || 'latest',\n\t\t\thelp: 'Either take the most recent value or define a precedence based on the source data',\n\t\t});\n\n\t\tlet mergeOrderInput = new MultiSelectInput({\n\t\t\tid: 'inputMergeOrder',\n\t\t\tlabel: 'Merge Order',\n\t\t\tchoices: [\n\t\t\t\t{ label: 'test1', value: 'test1' },\n\t\t\t\t{ label: 'test2', value: 'test2' },\n\t\t\t\t{ label: 'test3', value: 'test3' },\n\t\t\t],\n\t\t\tvalue: field?.content?.merge_order || [],\n\t\t\thelp: '[Optional] Define the precedence of the source data; if no precendence is provided, a random order is used',\n\t\t});\n\n\t\tlet spinnerInput = new SpinnerInput({\n\t\t\tid: 'inputMaxValues',\n\t\t\tlabel: 'Max Values',\n\t\t\tvalue: field?.content?.max_values || 10,\n\t\t\thelp: 'The maximum number of values to store as a multivalue',\n\t\t});\n\n\t\tlet evalExpInput = new TextInput({\n\t\t\tid: 'inputEvalExp',\n\t\t\tlabel: 'Eval Expression',\n\t\t\tvalue: field?.content?.eval_expression || '',\n\t\t\thelp: 'An SPL eval expression, example: replace(field1, \"[^w]\", \"\")',\n\t\t});\n\n\t\t$form = $(`\n            <div class=\"form-horizontal\">\n                <div class=\"input-group-base\"></div>\n                <div class=\"input-group-toggle input-group-single\"></div>\n                <div class=\"input-group-toggle input-group-multivalue\"></div>\n                <div class=\"input-group-toggle input-group-eval\"></div>\n            </div>`);\n\n\t\t$('.input-group-base', $form)\n\t\t\t.append(fieldNameInput.getInput())\n\t\t\t.append(keyFieldInput.getInput())\n\t\t\t.append(caseSensitiveInput.getInput())\n\t\t\t.append(ignoreValuesInput.getInput())\n\t\t\t.append(fillnullInput.getInput())\n\t\t\t.append(typeInput.getInput());\n\n\t\t$('.input-group-single', $form).append(mergeMethodInput.getInput()).append(mergeOrderInput.getInput());\n\t\t$('.input-group-multivalue', $form).append(spinnerInput.getInput());\n\t\t$('.input-group-eval', $form).append(evalExpInput.getInput());\n\n\t\tlet type = typeInput.getValue();\n\t\t$('.input-group-toggle', $form).hide();\n\t\t$(`.input-group-${type}`, $form).show();\n\n\t\tlet mergeMethod = mergeMethodInput.getValue();\n\t\tlet $input = mergeOrderInput.getInput();\n\t\tmergeMethod == 'latest' ? $input.hide() : $input.show();\n\n\t\tkeyFieldInput.getInput().on('change', function (e, data) {\n\t\t\tif (data.value == '1') {\n\t\t\t\ttypeInput.setValue('single');\n\t\t\t\ttypeInput.disable();\n\t\t\t} else {\n\t\t\t\ttypeInput.enable();\n\t\t\t}\n\t\t});\n\n\t\ttypeInput.getInput().on('change', function (e, data) {\n\t\t\t$('.input-group-toggle', $form).hide();\n\t\t\t$(`.input-group-${data.value}`, $form).show();\n\t\t});\n\n\t\tmergeMethodInput.getInput().on('change', function (e, data) {\n\t\t\tlet $input = mergeOrderInput.getInput();\n\t\t\tdata.value == 'latest' ? $input.hide() : $input.show();\n\t\t});\n\n\t\tlet editAddModal = new Modal({\n\t\t\twide: true,\n\t\t\ttitle: field ? 'Edit Field' : 'Add Field',\n\t\t\tprimaryButton: 'Save',\n\t\t\tonRemove: function () {\n\t\t\t\tmvc.Components.getInstance(mergeOrderInput.getId()).dispose();\n\t\t\t},\n\t\t\tonPrimaryBtnClick: function () {\n\t\t\t\tif (fieldNameInput.isEditable()) {\n\t\t\t\t\tlet pattern = /^\\w+$/;\n\t\t\t\t\tif (!pattern.test(fieldNameInput.getValue())) {\n\t\t\t\t\t\tfieldNameInput.setError('Field name can only use alphanumeric characters and underscores');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet endpoint = 'conf-assetdb/';\n\n\t\t\t\tlet data = {\n\t\t\t\t\tkey_field: keyFieldInput.getValue(),\n\t\t\t\t\tcase_sensitive: caseSensitiveInput.getValue(),\n\t\t\t\t\tignore_values: ignoreValuesInput.getValue(),\n\t\t\t\t\tfillnull: fillnullInput.getValue(),\n\t\t\t\t\ttype: typeInput.getValue(),\n\t\t\t\t\tmerge_method: mergeMethodInput.getValue(),\n\t\t\t\t\tmerge_order: mergeOrderInput.getValue(),\n\t\t\t\t\tmax_values: spinnerInput.getValue() || 2,\n\t\t\t\t\teval_expression: evalExpInput.getValue(),\n\t\t\t\t};\n\n\t\t\t\tif (fieldNameInput.isEditable()) {\n\t\t\t\t\tdata.name = fieldNameInput.getValue();\n\t\t\t\t} else {\n\t\t\t\t\tendpoint += fieldNameInput.getValue();\n\t\t\t\t}\n\n\t\t\t\tlet d = setConf(endpoint, data);\n\t\t\t\t$.when(d).done(() => {\n\t\t\t\t\tbuildTable();\n\t\t\t\t\tthis.hide();\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\n\t\teditAddModal.setBody($form);\n\t\teditAddModal.show();\n\t}\n\n\tfunction deleteField(name) {\n\t\tlet deleteModal = new Modal({\n\t\t\twide: false,\n\t\t\ttitle: 'Delete Field',\n\t\t\tprimaryButton: 'Delete',\n\t\t\tonPrimaryBtnClick: function () {\n\t\t\t\tlet endpoint = 'conf-assetdb/' + name;\n\t\t\t\tlet d = delConf(endpoint);\n\t\t\t\t$.when(d).done(() => {\n\t\t\t\t\tbuildTable();\n\t\t\t\t\tthis.hide();\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\n\t\tlet $body = $(`<div>Are you sure you want to delete field <i>${name}</i>?</div>`);\n\t\tdeleteModal.setBody($body);\n\t\tdeleteModal.show();\n\t}\n\n\tfunction buildTable() {\n\t\t$el.html('');\n\n\t\t$button = $('<a href=\"#\" class=\"btn btn-primary\">Add Field</a>');\n\t\t$button.on('click', () => editAddField());\n\t\t$button.appendTo($el);\n\n\t\tlet d = getConf('conf-assetdb');\n\n\t\t$.when(d).done((data) => {\n\t\t\tlet fields = JSON.parse(data).entry;\n\t\t\tlet $table = $(`\n\t\t\t\t<table class=\"table table-chrome table-row-expanding table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th data-key=\"\" class=\"col-info\"><i class=\"icon-info\"></i></th>\n\t\t\t\t\t\t\t<th>Field</th>\n\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody></tbody>\n\t\t\t\t</table>`);\n\n\t\t\tfields.forEach(function (field) {\n\t\t\t\tlet isKey = parseInt(field.content.key_field);\n\t\t\t\tlet caseSensitive = parseInt(field.content.case_sensitive);\n\n\t\t\t\t$tr = $(`\n\t\t\t\t\t<tr data-name=\"${field.name}\">\n\t\t\t\t\t\t<td class=\"expands\"><a href=\"#\"><i class=\"icon-triangle-down-small\"></i></a></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>${field.name}</span>${isKey ? '<span class=\"key-tag\">Key</span>' : ''}\n\t\t\t\t\t\t\t<div class=\"more-info\" style=\"display: none\">\n\t\t\t\t\t\t\t\t<dl class=\"list-dotted\">\n\t\t\t\t\t\t\t\t\t<dt>Key Field</dt><dd>${isKey ? 'Yes' : 'No'}</dd>\n\t\t\t\t\t\t\t\t\t<dt>Case Sensitive</dt><dd>${caseSensitive ? 'Yes' : 'No'}</dd>\n\t\t\t\t\t\t\t\t\t<dt>Ignore Values</dt><dd>${field.content.ignore_values || 'N/A'}</dd>\n\t\t\t\t\t\t\t\t\t<dt>Fill Null</dt><dd>${field.content.fillnull || 'N/A'}</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>${field.content.type}</td>\n\t\t\t\t\t\t<td><a class=\"adb-field-edit\" href=\"#\">Edit</a> ${field.content.default ? '' : '| <a class=\"adb-field-delete\" href=\"#\">Delete</a></td>'}\n\t\t\t\t\t</tr>`);\n\n\t\t\t\tlet $dl = $('dl', $tr);\n\t\t\t\tif (field.content.type == 'single') {\n\t\t\t\t\t$dl.append(`<dt>Merge Method</dt><dd>${field.content.merge_method}</dd>`);\n\t\t\t\t\tif (field.content.merge_method == 'coalesce') {\n\t\t\t\t\t\t$dl.append(`<dt>Merge Order</dt><dd>${field.content.merge_order}</dd>`);\n\t\t\t\t\t}\n\t\t\t\t} else if (field.content.type == 'multivalue') {\n\t\t\t\t\t$dl.append(`<dt>Max Values</dt><dd>${field.content.max_values}</dd>`);\n\t\t\t\t} else if (field.content.type == 'eval') {\n\t\t\t\t\t$dl.append(`<dt>Eval Expression</dt><dd>${field.content.eval_expression}</dd>`);\n\t\t\t\t}\n\n\t\t\t\t$('td.expands', $tr).on('click', function () {\n\t\t\t\t\t$(this).next().find('.more-info').toggle();\n\t\t\t\t\t$('i', this).toggleClass('icon-triangle-right-small').toggleClass('icon-triangle-down-small');\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\t$('.adb-field-edit', $tr).on('click', () => editAddField(field));\n\t\t\t\t$('.adb-field-delete', $tr).on('click', () => deleteField(field.name));\n\n\t\t\t\t$('tbody', $table).append($tr);\n\t\t\t});\n\n\t\t\t$el.append($table);\n\t\t});\n\t}\n\n\tfunction makeMergeSearch() {\n\t\tlet d = getConf('conf-assetdb');\n\n\t\t$.when(d).done((data) => {\n\t\t\tlet fields = JSON.parse(data).entry;\n\t\t\tlet preEval = '';\n\t\t\tlet stats = [];\n\t\t\tlet postEval = '';\n\t\t\tlet keys = [];\n\t\t\tlet table = [];\n\t\t\tlet fillnull = {};\n\t\t\tlet ignoreValues = [];\n\t\t\tlet caseSensitive = [];\n\t\t\tlet maxValues = [];\n\n\t\t\tfields.forEach(function (field) {\n\t\t\t\tif (parseInt(field.content.key_field)) keys.push(field.name);\n\n\t\t\t\tif (field.content.ignore_values) {\n\t\t\t\t\tlet ignoreValuesArray = field.content.ignore_values.split(',');\n\t\t\t\t\tlet ignoreValuesMerge = ignoreValuesArray.map((value) => {\n\t\t\t\t\t\treturn `\"${value}\"`;\n\t\t\t\t\t});\n\t\t\t\t\tignoreValues.push(`${field.name} = if(in(${field.name}, ${ignoreValuesMerge.join(', ')}), null(), ${field.name})`);\n\t\t\t\t}\n\n\t\t\t\tif (field.content.fillnull) {\n\t\t\t\t\tlet value = field.content.fillnull;\n\t\t\t\t\tif (value in fillnull) fillnull[value].push(field.name);\n\t\t\t\t\telse fillnull[value] = [field.name];\n\t\t\t\t}\n\n\t\t\t\tif (!parseInt(field.content.case_sensitive)) {\n\t\t\t\t\tcaseSensitive.push(`${field.name} = lower(${field.name})`);\n\t\t\t\t}\n\n\t\t\t\tif (field.content.type == 'single') {\n\t\t\t\t\tif (field.content.merge_method == 'latest') {\n\t\t\t\t\t\tstats.push(`latest(${field.name}) as ${field.name}`);\n\t\t\t\t\t} else if (field.content.merge_method == 'coalesce') {\n\t\t\t\t\t\tlet mergeOrderArray = field.content.merge_order.split(',');\n\n\t\t\t\t\t\tlet preEvalMerge = mergeOrderArray.map((lookup) => {\n\t\t\t\t\t\t\treturn `${lookup}_${field.name} = ${field.name}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpreEval += `\\n| eval ${preEvalMerge.join(', ')}`;\n\n\t\t\t\t\t\tlet statsMerge = mergeOrderArray.map((lookup) => {\n\t\t\t\t\t\t\treturn `latest(${lookup}_${field.name}) as ${lookup}_${field.name}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tstats = stats.concat(statsMerge);\n\n\t\t\t\t\t\tlet postEvalMerge = mergeOrderArray.map((lookup) => {\n\t\t\t\t\t\t\treturn `${lookup}_${field.name}`;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpostEval += `\\n| eval ${field.name} = coalesce(${postEvalMerge.join(', ')})`;\n\t\t\t\t\t}\n\t\t\t\t} else if (field.content.type == 'multivalue') {\n\t\t\t\t\tstats.push(`values(${field.name}) as ${field.name}`);\n\t\t\t\t\tmaxValues.push(`${field.name} = mvindex(${field.name},0,${parseInt(field.content.max_values) - 1})`);\n\t\t\t\t} else if (field.content.type == 'eval') {\n\t\t\t\t\tpostEval += `\\n| eval ${field.name} = ${field.content.eval_expression}`;\n\t\t\t\t}\n\n\t\t\t\ttable.push(field.name);\n\t\t\t});\n\n\t\t\tpreEval += `\\n| eval _key = ${keys.join('.')}`;\n\t\t\tconsole.log(maxValues);\n\n\t\t\tlet search = '';\n\t\t\tif (caseSensitive.length) search += `\\n| eval ${caseSensitive.join(', ')}`;\n\t\t\tif (ignoreValues.length) search += `\\n| eval ${ignoreValues.join(', ')}`;\n\t\t\tfor (k in fillnull) search += `\\n| fillnull ${fillnull[k].join(' ')} value=\"${k}\"`;\n\t\t\tsearch += preEval;\n\t\t\tsearch += `\\n| stats ${stats.join(', ')} by _key`;\n\t\t\tif (maxValues.length) search += `\\n| eval ${maxValues.join(', ')}`;\n\t\t\tsearch += postEval;\n\t\t\tsearch += `\\n| table _key, ${table.join(', ')}`;\n\n\t\t\tconsole.log(search);\n\t\t});\n\t}\n\n\tbuildTable();\n\tmakeMergeSearch();\n});\n"]}