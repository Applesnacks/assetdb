{"version":3,"sources":["src/spinnerInput.js"],"names":["define","require","exports","module","_","$","SpinnerInput","data","_this","this","_classCallCheck","id","escape","label","value","$input","concat","on","e","$text_input","current_val","parseInt","val","target_val","Math","max","help","$help","append","_createClass","key"],"mappings":"mZAAAA,QAAO,SAAUC,EAASC,EAASC,GAClC,IAAIC,EAAIH,EAAQ,cACZI,EAAIJ,EAAQ,UAuDhB,OAzD0C,WAKzC,SAAAK,EAAYC,GAAM,IAAAC,EAAAC,KAAAC,gBAAAD,KAAAH,GACjB,IAAIK,EAAKP,EAAEQ,OAAOL,EAAKI,IACnBE,EAAQT,EAAEQ,OAAOL,EAAKM,OACtBC,EAAQV,EAAEQ,OAAOL,EAAKO,OAkC1B,GAhCAL,KAAKM,OAASV,EAAC,8BAAAW,OACSL,EADT,oJAAAK,OAEmDH,EAFnD,sQAAAG,OAKmEF,EALnE,2aAgBfT,EAAE,gBAAiBI,KAAKM,QAAQE,GAAG,SAAS,SAACC,GAC5C,IAAIC,EAAcd,EAAE,QAASG,EAAKO,QAC9BK,EAAcC,SAASF,EAAYG,QAAU,EAC7CC,EAAcH,GAAe,EAEjC,OADAD,EAAYG,IAAIC,IACT,KAGRlB,EAAE,kBAAmBI,KAAKM,QAAQE,GAAG,SAAS,SAACC,GAC9C,IAAIC,EAAcd,EAAE,QAASG,EAAKO,QAC9BK,EAAcC,SAASF,EAAYG,QAAU,EAC7CC,EAAaC,KAAKC,IAAI,EAAIL,GAAe,GAE7C,OADAD,EAAYG,IAAIC,IACT,KAGJhB,EAAKmB,KAAM,CACd,IAAIC,EAAQtB,EAAC,2BAAAW,OAA4BT,EAAKmB,KAAjC,WACbjB,KAAKM,OAAOa,OAAOD,IA5CoB,OAAAE,aAAAvB,EAAA,CAAA,CAAAwB,IAAA,WAAAhB,MAgDzC,WACC,OAAOO,SAAShB,EAAE,QAASI,KAAKM,QAAQO,SAjDA,CAAAQ,IAAA,WAAAhB,MAoDzC,WACC,OAAOL,KAAKM,WArD4BT,EAAA","sourcesContent":["define(function (require, exports, module) {\n\tlet _ = require('underscore');\n\tlet $ = require('jquery');\n\n\tclass SpinnerInput {\n\t\tconstructor(data) {\n\t\t\tlet id = _.escape(data.id);\n\t\t\tlet label = _.escape(data.label);\n\t\t\tlet value = _.escape(data.value);\n\n\t\t\tthis.$input = $(`\n                <div id=\"${id}\" class=\"control-group shared-controls-controlgroup control-group-default\">\n                    <label class=\"control-label\" for=\"control-key\">${label}</label>\n                    <div role=\"group\" class=\"controls controls-join\">\n                        <div class=\"control shared-controls-spinnercontrol control-default\">\n                            <input type=\"text\" name=\"inputSpinner\" class=\"\" value=\"${value}\" autocomplete=\"off\" />\n                            <a href=\"#\" class=\"increment-down\">\n                                <i class=\"icon-minus\"></i>\n                            </a>\n                            <a href=\"#\" class=\"increment-up\">\n                                <i class=\"icon-plus\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>`);\n\n\t\t\t$('.increment-up', this.$input).on('click', (e) => {\n\t\t\t\tlet $text_input = $('input', this.$input);\n\t\t\t\tlet current_val = parseInt($text_input.val()) || 2;\n\t\t\t\tlet target_val = (current_val += 1);\n\t\t\t\t$text_input.val(target_val);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\t$('.increment-down', this.$input).on('click', (e) => {\n\t\t\t\tlet $text_input = $('input', this.$input);\n\t\t\t\tlet current_val = parseInt($text_input.val()) || 2;\n\t\t\t\tlet target_val = Math.max(2, (current_val -= 1));\n\t\t\t\t$text_input.val(target_val);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tif (data.help) {\n\t\t\t\tlet $help = $(`<div class=\"help-block\">${data.help}</div>`);\n\t\t\t\tthis.$input.append($help);\n\t\t\t}\n\t\t}\n\n\t\tgetValue() {\n\t\t\treturn parseInt($('input', this.$input).val());\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.$input;\n\t\t}\n\t}\n\n\treturn SpinnerInput;\n});\n"]}