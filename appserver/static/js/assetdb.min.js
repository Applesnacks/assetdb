"use strict";require(["underscore","jquery","splunkjs/mvc","splunkjs/mvc/searchmanager","/static/app/assetdb/js/modal.min.js","/static/app/assetdb/js/textInput.min.js","/static/app/assetdb/js/radioInput.min.js","/static/app/assetdb/js/spinnerInput.min.js","/static/app/assetdb/js/multiselectInput.min.js","/static/app/assetdb/js/format.min.js","splunkjs/mvc/simpleform/input/dropdown","splunkjs/mvc/simplexml/ready!"],(function(t,e,n,a,o,l,s,i,c,d,r){var u=e("#ab_config"),p="/servicesNS/nobody/assetdb/configs/",v=n.createService();function h(t){var e=p+t;return v.get(e,{count:0}).promise()}function f(t,e){var n=p+t;return v.post(n,e).promise()}function m(t,e,n){if("add"==n)t.push(e);else{if("delete"!=n)return;var a=t.indexOf(e);a>-1&&t.splice(a,1)}return f("conf-assetdb/general/",{lookups:t.join(",")})}function g(t,n,a,o){var l,s=[];if("add"==o){n.name=a,s.push(f("conf-assetdb/",n));var i=t.reduce((function(t,e){return"general"!==e.name&&t.push(e.name),t}),[]);-1==i.indexOf(a)&&i.push(a),i.push("_key"),i.push("asset"),i.push("source");var c={fields_list:i.join(",")};s.push(f("conf-transforms/assetdb",c))}else if("edit"==o){var d="conf-assetdb/"+a;s.push(f(d,n))}else if("delete"==o){s.push((l=p+("conf-assetdb/"+a),v.del(l).promise()));var r=t.reduce((function(t,e){return"general"!==e.name&&t.push(e.name),t}),[]),u=r.indexOf(a);u>-1&&r.splice(u,1),r.push("_key");var h={fields_list:r.join(",")};s.push(f("conf-transforms/assetdb",h))}return e.when.apply(e,s)}function b(){var t=I();return e.when(t).then((function(t){return{search:t}})).then((function(t){return f("conf-savedsearches/assetdb-lookupgen",t)}))}function k(t,a){var d,r,u,p,v,h,f,m,k,y,_=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},w=new l({id:"inputFieldName",label:"Field Name",editable:null==_||!_.name,value:(null==_?void 0:_.name)||""}),I=new s({id:"inputKeyField",label:"Key Field",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==_||null===(d=_.content)||void 0===d?void 0:d.key_field)||0,help:"Key fields define a unique asset"}),x=new s({id:"inputCaseSensitive",label:"Case Sensitive",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==_||null===(r=_.content)||void 0===r?void 0:r.case_sensitive)||0,help:"If No, field values are converted to lowercase"}),F=new l({id:"inputIgnoreValues",label:"Ignore Values",value:(null==_||null===(u=_.content)||void 0===u?void 0:u.ignore_values)||"",help:"[Optional] A comma separated list of values to ignore"}),C=new l({id:"inputFillnull",label:"Fill Null",value:(null==_||null===(p=_.content)||void 0===p?void 0:p.fillnull)||"",help:"[Optional] Fill null entries with a static value"}),A=new s({id:"inputFieldType",label:"Field Type",choices:[{label:"Single",value:"single"},{label:"Multivalue",value:"multivalue"},{label:"Eval",value:"eval"}],value:(null==_||null===(v=_.content)||void 0===v?void 0:v.field_type)||"single",help:"Use a single value, keep all unique entries as a multivalue, or use an eval expression to define this field"}),E=new s({id:"inputMergeMethod",label:"Merge Method",choices:[{label:"Latest",value:"latest"},{label:"Min",value:"min"},{label:"Max",value:"max"},{label:"Avg",value:"avg"},{label:"Coalesce",value:"coalesce"}],value:(null==_||null===(h=_.content)||void 0===h?void 0:h.merge_method)||"latest",help:"Use the most recent value, minimum value, maximum value, average value, or define a precedence based on the source data"}),N=new c({id:"inputMergeOrder",label:"Merge Order",choices:t.map((function(t){return{label:t,value:t}})),value:null!=_&&null!==(f=_.content)&&void 0!==f&&f.merge_order?null==_||null===(m=_.content)||void 0===m?void 0:m.merge_order.split(","):[],help:"[Optional] Define the precedence of the source data; if no precendence is provided, a random order is used"}),V=new i({id:"inputMaxValues",label:"Max Values",value:(null==_||null===(k=_.content)||void 0===k?void 0:k.max_values)||10,minimum:2,help:"The maximum number of values to store as a multivalue"}),$=new l({id:"inputEvalExp",label:"Eval Expression",value:(null==_||null===(y=_.content)||void 0===y?void 0:y.eval_expression)||"",help:'An SPL eval expression, example: replace(field1, "[^w]", "")'});$form=e('\n            <div class="form-horizontal">\n                <div class="input-group-base"></div>\n                <div class="input-group-toggle input-group-single"></div>\n                <div class="input-group-toggle input-group-multivalue"></div>\n                <div class="input-group-toggle input-group-eval"></div>\n            </div>'),e(".input-group-base",$form).append(w.getInput()).append(I.getInput()).append(x.getInput()).append(F.getInput()).append(C.getInput()).append(A.getInput()),e(".input-group-single",$form).append(E.getInput()).append(N.getInput()),e(".input-group-multivalue",$form).append(V.getInput()),e(".input-group-eval",$form).append($.getInput());var L=A.getValue();e(".input-group-toggle",$form).hide(),e(".input-group-".concat(L),$form).show();var S=E.getValue(),M=N.getInput();"coalesce"==S?M.show():M.hide(),A.getInput().on("change",(function(t,n){e(".input-group-toggle",$form).hide(),e(".input-group-".concat(n.value),$form).show()})),E.getInput().on("change",(function(t,e){var n=N.getInput();"coalesce"==e.value?n.show():n.hide()}));var B=new o({wide:!0,title:_?"Edit Field":"Add Field",primaryButton:"Save",onRemove:function(){n.Components.getInstance(N.getId()).dispose()},onPrimaryBtnClick:function(){var t=this;if(w.isEditable()){if(!/^\w+$/.test(w.getValue()))return void w.setError("Field name can only use alphanumeric characters and underscores");if("asset"==w.getValue())return void w.setError('"asset" is a default field and cannot be replaced, choose another field name');if("source"==w.getValue())return void w.setError('"source" is a default field and cannot be replaced, choose another field name');if("_key"==w.getValue())return void w.setError('"_key" is a default field and cannot be replaced, choose another field name')}var n=w.isEditable()?"add":"edit",o={key_field:I.getValue(),case_sensitive:x.getValue(),ignore_values:F.getValue(),fillnull:C.getValue(),field_type:A.getValue(),merge_method:E.getValue(),merge_order:N.getValue(),max_values:V.getValue()||2,eval_expression:$.getValue()},l=g(a,o,w.getValue(),n);e.when(l).done((function(){b(),j("section-fields"),t.hide()}))}});B.setBody($form),B.show()}function y(t,n){var a=new o({wide:!1,title:"Delete Field",primaryButton:"Delete",onPrimaryBtnClick:function(){var a=this,o=g(t,{},n,"delete");e.when(o).done((function(){b(),j("section-fields"),a.hide()}))}}),l=e("<div>Are you sure you want to delete field <i>".concat(n,"</i>?</div>"));a.setBody(l),a.show()}function _(t){$form=e('\n            <div class="form">\n\t\t\t\t<div class="control-group shared-controls-controlgroup control-group-default">                \n\t\t\t\t\t<label class="control-label" for="control-app">App</label>                \n\t\t\t\t\t<div role="group" class="controls controls-join ">\n\t\t\t\t\t\t<div class="input-app dropdown-input"></div>\n\t\t\t\t\t</div>                                        \n\t\t\t\t</div>\n\t\t\t\t<div class="control-group shared-controls-controlgroup control-group-default">                \n\t\t\t\t\t<label class="control-label" for="control-lookup">Lookup</label>                \n\t\t\t\t\t<div role="group" class="controls controls-join ">\n\t\t\t\t\t\t<div class="input-lookup dropdown-input"></div>\n\t\t\t\t\t</div>                                        \n\t\t\t\t</div>\n            </div>'),new a({id:"searchApp",preview:!0,cache:!0,search:"| rest /services/apps/local | search disabled=0 | fields title label | sort label"},{tokens:!0}),new a({id:"searchLookup",preview:!0,cache:!0,search:"| rest /services/data/lookup-table-files | search eai:acl.app=$app$ | table title | append [| rest /services/data/transforms/lookups | search eai:acl.app=$app$ | table title] | dedup title | sort title"},{tokens:!0});new r({id:"inputApp",searchWhenChanged:!0,showClearButton:!0,selectFirstChoice:!0,labelField:"label",valueField:"title",value:"$app$",managerid:"searchApp",el:e(".input-app",$form)},{tokens:!0}).render();var l=new r({id:"inputLookup",searchWhenChanged:!0,showClearButton:!0,selectFirstChoice:!1,labelField:"title",valueField:"title",managerid:"searchLookup",el:e(".input-lookup",$form)},{tokens:!0}).render(),s=new o({wide:!1,title:"Add Lookup",primaryButton:"Save",onRemove:function(){n.Components.getInstance("inputApp").dispose(),n.Components.getInstance("inputLookup").dispose(),n.Components.getInstance("searchApp").dispose(),n.Components.getInstance("searchLookup").dispose()},onPrimaryBtnClick:function(){var n=this,a=l.val();if(a)if(t.indexOf(a)>-1)e(".input-lookup .splunk-choice-input-message div").text("The lookup file ".concat(a," has already been added."));else{var o=m(t,a,"add");e.when(o).done((function(){b(),j("section-lookups"),n.hide()}))}}});s.setBody($form),s.show()}function w(t,n){var a=t.indexOf(n);a>-1&&t.splice(a,1);var l=new o({wide:!1,title:"Remove Lookup",primaryButton:"Remove",onPrimaryBtnClick:function(){var a=this,o=m(t,n,"delete");e.when(o).done((function(){b(),j("section-lookups"),a.hide()}))}}),s=e("<div>Are you sure you want to remove asset lookup <i>".concat(n,"</i> from the merge process? Note: The lookup will still exist within Splunk.</div>"));l.setBody(s),l.show()}function j(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"section-lookups";u.html("");var n=h("conf-assetdb");e.when(n).done((function(n){var a,o=JSON.parse(n).entry;console.log(n);var l=e('\n\t\t\t\t<div class="container">\n\t\t\t\t\t<ul class="nav nav-tabs main-tabs shared-tabcontrols-tabbar">\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-lookups">\n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Lookups</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-fields">            \n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Fields</a>        \n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-search">            \n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Merge Search</a>        \n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<section data-section-id="section-lookups">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Select lookup tables with asset data from individual sources to include within the merge process.</p>\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-lookup">Add Lookup</a>\n\t\t\t\t\t\t<table class="lookups-table table table-striped table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Lookup</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-section-id="section-fields">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Configure asset fields and how they are merged across individual lookups.</p>\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-field">Add Field</a>\n\t\t\t\t\t\t<table class="fields-table table table-striped table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th data-key="" class="col-info"><i class="icon-info"></i></th>\n\t\t\t\t\t\t\t\t\t<th>Field</th>\n\t\t\t\t\t\t\t\t\t<th>Field Type</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-section-id="section-search">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Auto generated search that merges all asset lookups according to configured fields and their respective merge settings.</p>\n\t\t\t\t\t\t<a target="_blank" href="/app/assetdb/search?s=%2FservicesNS%2Fnobody%2Fassetdb%2Fsaved%2Fsearches%2Fassetdb-lookupgen" class="btn btn-primary">Run Search <i class="icon-external"></i></a>\n\t\t\t\t\t\t<a target="_blank" href="/manager/assetdb/saved/searches?app=assetdb&search=assetdb-lookupgen" class="btn btn-edit-schedule">Edit Schedule <i class="icon-external"></i></a>\n\t\t\t\t\t\t<div class="query-container">\n\t\t\t\t\t\t\t<div class="formatted-query"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t');e('li[data-section-id="'.concat(t,'"]'),l).addClass("active"),e('section[data-section-id="'.concat(t,'"]'),l).addClass("active"),e("li",l).on("click",(function(){e("li",l).removeClass("active"),e(this).addClass("active"),e("section",l).removeClass("active");var t=e(this).attr("data-section-id");e('section[data-section-id="'.concat(t,'"]'),l).addClass("active")}));var s=o.find((function(t){return"general"===t.name})),i=((null==s||null===(a=s.content)||void 0===a?void 0:a.lookups)||"").split(",");if(!i.length){var c='<p class="error-message"><i class="icon-warning"></i> WARNING: You must add at least one lookup to merge into the asset database!</p>';e('section[data-section-id="section-lookups"] p',l).last().after(c),e('section[data-section-id="section-search"] p',l).last().after(c)}if(o.length<2){var r='<p class="error-message"><i class="icon-warning"></i> WARNING: You must add at least one field to include in the asset database!</p>';e('section[data-section-id="section-fields"] p',l).last().after(r),e('section[data-section-id="section-search"] p',l).last().after(r)}e(".btn-add-field",l).on("click",(function(){return k(i,o)})),e(".btn-add-lookup",l).on("click",(function(){return _(i)})),i.forEach((function(t){var n=e('\n\t\t\t\t\t<tr data-name="'.concat(t,'">\n\t\t\t\t\t\t<td>').concat(t,'</td>\n\t\t\t\t\t\t<td><a class="adb-lookup-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t</tr>\n\t\t\t\t'));e(".adb-lookup-delete",n).on("click",(function(){return w(i,t)})),e(".lookups-table tbody",l).append(n)})),o.forEach((function(t){var n,a;if("general"!=t.name){var s=parseInt(t.content.key_field),c=parseInt(t.content.case_sensitive),d=e('\n\t\t\t\t\t<tr data-name="'.concat(t.name,'">\n\t\t\t\t\t\t<td class="expands"><a href="#"><i class="icon-triangle-down-small"></i></a></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>').concat(t.name,"</span>").concat(s?'<span class="key-tag">Key</span>':"",'\n\t\t\t\t\t\t\t<div class="more-info" style="display: none">\n\t\t\t\t\t\t\t\t<dl class="list-dotted">\n\t\t\t\t\t\t\t\t\t<dt>Key Field</dt><dd>').concat(s?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Case Sensitive</dt><dd>").concat(c?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Ignore Values</dt><dd>").concat(t.content.ignore_values||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Fill Null</dt><dd>").concat(t.content.fillnull||"N/A","</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>").concat(t.content.field_type).concat("multivalue"==(null==t||null===(n=t.content)||void 0===n?void 0:n.field_type)?"":" - "+(null==t||null===(a=t.content)||void 0===a?void 0:a.merge_method),'</td>\n\t\t\t\t\t\t<td><a class="adb-field-edit" href="#">Edit</a> | <a class="adb-field-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t</tr>')),r=e("dl",d);"single"==t.content.field_type?(r.append("<dt>Merge Method</dt><dd>".concat(t.content.merge_method,"</dd>")),"coalesce"==t.content.merge_method&&r.append("<dt>Merge Order</dt><dd>".concat(t.content.merge_order,"</dd>"))):"multivalue"==t.content.field_type?r.append("<dt>Max Values</dt><dd>".concat(t.content.max_values,"</dd>")):"eval"==t.content.field_type&&r.append("<dt>Eval Expression</dt><dd>".concat(t.content.eval_expression,"</dd>")),e("td.expands",d).on("click",(function(){return e(this).next().find(".more-info").toggle(),e("i",this).toggleClass("icon-triangle-right-small").toggleClass("icon-triangle-down-small"),!1})),e(".adb-field-edit",d).on("click",(function(){return k(i,o,t)})),e(".adb-field-delete",d).on("click",(function(){return y(o,t.name)})),e(".fields-table tbody",l).append(d)}}));var p=I(o);e.when(p).done((function(t){var n=d(t,!0,!0);e(".formatted-query",l).append(n)})),u.append(l)}))}function I(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=t.length?e.Deferred().resolve().promise():h("conf-assetdb");return e.when(n).then((function(e){t.length||(t=JSON.parse(e).entry);var n=[],a=[],o=[],l=[],s=[],i=[],c=[],d=[],r=[],u=[],p=[],v=[];t.forEach((function(t){var e;if("general"==t.name&&null!=t&&null!==(e=t.content)&&void 0!==e&&e.lookups){var h=t.content.lookups.split(",");v=h.map((function(t){return"\n| `input_adb_lookup(".concat(t,")`")}))}else{var f,m,g;if(parseInt(t.content.key_field)&&i.push(t.name),t.content.ignore_values){var b=t.content.ignore_values.split(",");r.push("".concat(t.name,' IN ("').concat(b.join('", "'),'")'))}if(null!=t&&null!==(f=t.content)&&void 0!==f&&f.fillnull&&d.push("".concat(t.name," = if(isnull(").concat(t.name,'), "').concat(t.content.fillnull,'", ').concat(t.name,")")),parseInt(t.content.case_sensitive)||u.push(t.name),"single"==(null==t||null===(m=t.content)||void 0===m?void 0:m.field_type))if("latest"==t.content.merge_method)l.push("latest(".concat(t.name,") as ").concat(t.name));else if("coalesce"==(null==t||null===(g=t.content)||void 0===g?void 0:g.merge_method)){n.push("{adb_source}_".concat(t.name," = ").concat(t.name));var k=t.content.merge_order.split(","),y=k.map((function(e){return"latest(".concat(e,"_").concat(t.name,") as ").concat(e,"_").concat(t.name)}));l=l.concat(y);var _=k.map((function(e){return"'".concat(e,"_").concat(t.name,"'")}));a.push("".concat(t.name," = coalesce(").concat(_.join(", "),")"))}else l.push("".concat(t.content.merge_method,"(").concat(t.name,") as ").concat(t.name));else"multivalue"==t.content.field_type?(o.push(t.name),l.push("values(".concat(t.name,") as ").concat(t.name)),p.push("".concat(t.name," = mvindex(").concat(t.name,",0,").concat(parseInt(t.content.max_values)-1,")"))):"eval"==t.content.field_type&&s.push("".concat(t.name," = ").concat(t.content.eval_expression));c.push(t.name)}}));var h="";return v.length&&(h+=v.join("")),o.length&&(h+="\n| foreach ".concat(o.join(", "),' [eval <<FIELD>>=split(<<FIELD>>, "|")]')),u.length&&(h+="\n| foreach ".concat(u.join(", ")," [eval <<FIELD>>=lower(<<FIELD>>)]")),r.length&&(h+="\n| search NOT (".concat(r.join(" "),")")),d.length&&(h+="\n| eval ".concat(d.join(", "))),n.length&&(h+="\n| eval ".concat(n.join(", "))),s.length&&(h+="\n| eval ".concat(s.join(", "))),i.length&&(h+="\n| eval _key = "+(1==i.length?i[0]:"mvjoin(mvdedup(mvappend(".concat(i.join(", "),')), "::")'))),h+="\n| search _key=*",l.length&&(h+="\n| stats values(source) as source ".concat(l.join(", ")," by _key")),i.length&&(h+="\n| eval _key = "+(1==i.length?i[0]:"mvappend(".concat(i.join(", "),")"))),h+="\n| adbmerge max_keys=25",h+='\n| eval _key = md5(mvjoin(asset, "::"))',l.length&&(h+="\n| stats values(asset) as asset, values(source) as source, ".concat(l.join(", ")," by _key")),p.length&&(h+="\n| eval ".concat(p.join(", "))),a.length&&(h+="\n| eval ".concat(a.join(", "))),c.length&&(h+="\n| table _key, asset, source, ".concat(c.join(", "))),h=(h+="\n| outputlookup assetdb").substring(1)}))}j()}));