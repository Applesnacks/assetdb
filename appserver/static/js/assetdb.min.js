"use strict";function _createForOfIteratorHelper(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var a=0,o=function(){};return{s:o,n:function(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var l,s=!0,i=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return s=t.done,t},e:function(t){i=!0,l=t},f:function(){try{s||null==n.return||n.return()}finally{if(i)throw l}}}}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}require(["underscore","jquery","splunkjs/mvc","splunkjs/mvc/searchmanager","/static/app/assetdb/js/modal.min.js","/static/app/assetdb/js/textInput.min.js","/static/app/assetdb/js/radioInput.min.js","/static/app/assetdb/js/spinnerInput.min.js","/static/app/assetdb/js/multiselectInput.min.js","/static/app/assetdb/js/format.min.js","splunkjs/mvc/simpleform/input/dropdown","splunkjs/mvc/simplexml/ready!"],(function(t,e,n,a,o,l,s,i,r,c,d){var u=e("#ab_config"),p="/servicesNS/nobody/assetdb/configs/",v="/services/search/v2/parser",h=n.createService();function f(t){var e,n,a=t.find((function(t){return"general"===t.name}));if(null==(null==a||null===(e=a.content)||void 0===e?void 0:e.lookups)||""==(null==a||null===(n=a.content)||void 0===n?void 0:n.lookups))return[];try{return JSON.parse(a.content.lookups)}catch(t){return a.content.lookups.split(",").map((function(t){return{name:t,lookup:t}}))}}function m(t){var e=p+t;return h.get(e,{count:0}).promise()}function g(t,e){var n=p+t;return h.post(n,e).promise()}function b(t,e,n,a){if("add"==a){for(var o=0,l=t.length;o<l;){var s=o+l>>>1;t[s].name<e?o=s+1:l=s}t.splice(o,0,{name:e,lookup:n})}else{if("delete"!=a)return;var i=t.findIndex((function(t){return t.name===e}));i>-1&&t.splice(i,1)}return g("conf-assetdb/general/",{lookups:JSON.stringify(t)})}function y(t,n,a,o){var l,s=[];if("add"==o){n.name=a,s.push(g("conf-assetdb/",n));var i=t.reduce((function(t,e){return"general"!==e.name&&t.push(e.name),t}),[]);-1==i.indexOf(a)&&i.push(a),i.push("_key"),i.push("asset"),i.push("source"),i.push("source_lookup");var r={fields_list:i.join(",")};s.push(g("conf-transforms/assetdb",r))}else if("edit"==o){var c="conf-assetdb/"+a;s.push(g(c,n))}else if("delete"==o){s.push((l=p+("conf-assetdb/"+a),h.del(l).promise()));var d=t.reduce((function(t,e){return"general"!==e.name&&t.push(e.name),t}),[]),u=d.indexOf(a);u>-1&&d.splice(u,1),d.push("_key"),d.push("asset"),d.push("source"),d.push("source_lookup");var v={fields_list:d.join(",")};s.push(g("conf-transforms/assetdb",v))}return e.when.apply(e,s)}function k(t){var n=I(t);return e.when(n).then((function(t){return g("conf-savedsearches/assetdb-lookupgen",{search:t})}))}function _(t){var a,c,d,u,p,m,g,b,_,I,x,j=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};console.log(t);var A=f(t),E=new l({id:"inputFieldName",label:"Field Name",editable:null==j||!j.name,value:(null==j?void 0:j.name)||""}),F=new s({id:"inputKeyField",label:"Key Field",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==j||null===(a=j.content)||void 0===a?void 0:a.key_field)||0,help:"Key fields define a unique asset"}),V=new s({id:"inputCaseSensitive",label:"Case Sensitive",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==j||null===(c=j.content)||void 0===c?void 0:c.case_sensitive)||0,help:"If No, field values are converted to lowercase"}),C=new r({id:"inputIgnoreValues",label:"Ignore Values",allowCustomValues:!0,choices:[{value:"null"},{value:"unknown"},{value:""}],value:null!=j&&null!==(d=j.content)&&void 0!==d&&d.ignore_values?JSON.parse(j.content.ignore_values):[],help:"[Optional] Select from a list of common values to ignore or input your own"}),S=new l({id:"inputFillnull",label:"Fill Null",value:(null==j||null===(u=j.content)||void 0===u?void 0:u.fillnull)||"",help:"[Optional] Fill null entries with a static value"}),N=new l({id:"inputvalidation",label:"Validation",value:(null==j||null===(p=j.content)||void 0===p?void 0:p.validation)||"",help:"[Optional] Use a regular expression to validate field values. Values that do not match are ignored"}),O=new l({id:"inputEvalExp",label:"Eval Expression",value:(null==j||null===(m=j.content)||void 0===m?void 0:m.eval_expression)||"",help:'[Optional] An SPL eval expression to manipulate this field prior to merging, example: replace(field1, "[^w]", "")'}),L=new s({id:"inputFieldType",label:"Field Type",choices:[{label:"Single",value:"single"},{label:"Multivalue",value:"multivalue"}],value:(null==j||null===(g=j.content)||void 0===g?void 0:g.field_type)||"single",help:"Use a single value or keep all unique entries as a multivalue to define this field"}),M=new s({id:"inputMergeMethod",label:"Merge Method",choices:[{label:"Latest",value:"latest"},{label:"Min",value:"min"},{label:"Max",value:"max"},{label:"Avg",value:"avg"},{label:"Coalesce",value:"coalesce"}],value:(null==j||null===(b=j.content)||void 0===b?void 0:b.merge_method)||"latest",help:"Use the most recent value, minimum value, maximum value, average value, or define a precedence based on the source data"}),T=new r({id:"inputMergeOrder",label:"Merge Order",choices:A.map((function(t){return{label:t.name,value:t.name}})),value:null!=j&&null!==(_=j.content)&&void 0!==_&&_.merge_order?null==j||null===(I=j.content)||void 0===I?void 0:I.merge_order.split(","):[],help:"[Optional] Define the precedence of the source data; if no precendence is provided, a random order is used"}),B=new i({id:"inputMaxValues",label:"Max Values",value:(null==j||null===(x=j.content)||void 0===x?void 0:x.max_values)||10,minimum:2,help:"The maximum number of values to store as a multivalue"}),D=e('\n            <div class="form-horizontal">\n                <div class="input-group-base"></div>\n                <div class="input-group-toggle input-group-single"></div>\n                <div class="input-group-toggle input-group-multivalue"></div>\n            </div>');e(".input-group-base",D).append(E.getInput()).append(F.getInput()).append(V.getInput()).append(C.getInput()).append(S.getInput()).append(N.getInput()).append(O.getInput()).append(L.getInput()),e(".input-group-single",D).append(M.getInput()).append(T.getInput()),e(".input-group-multivalue",D).append(B.getInput()),e(".input-group-toggle",D).hide(),e(".input-group-".concat(L.getValue()),D).show();var q=T.getInput();"coalesce"==M.getValue()?q.show():q.hide(),L.getInput().on("change",(function(t,n){e(".input-group-toggle",D).hide(),e(".input-group-".concat(n.value),D).show()})),M.getInput().on("change",(function(t,e){var n=T.getInput();"coalesce"==e.value?n.show():n.hide()}));var $=new o({wide:!0,title:j?"Edit Field":"Add Field",primaryButton:"Save",onRemove:function(){n.Components.getInstance(T.getId()).dispose(),n.Components.getInstance(C.getId()).dispose()},onPrimaryBtnClick:function(){var n,a=this,o=!1,l=void 0;"eval"==L.getValue()&&O.getValue()&&(n="| makeresults | eval a=".concat(O.getValue()),l=h.get(v,{q:n}).promise()),e.when(l).always((function(n){if(400==(null==n?void 0:n.status)){var l=JSON.parse(n.responseText).messages;O.setError(l.length?l[0].text:"Invalid eval expression"),o=!0}if(E.isEditable()&&(E.validate(/^[a-zA-Z0-9_]+$/)?"asset"==E.getValue()?(E.setError('"asset" is a default field and cannot be replaced, choose another field name'),o=!0):"source"==E.getValue()?(E.setError('"source" is a default field and cannot be replaced, choose another field name'),o=!0):"source_lookup"==E.getValue()?(E.setError('"source_lookup" is a default field and cannot be replaced, choose another field name'),o=!0):"_key"==E.getValue()?(E.setError('"_key" is a default field and cannot be replaced, choose another field name'),o=!0):E.clearError():(E.setError("Field name can only use alphanumeric characters and underscores"),o=!0)),S.isEmpty()||S.validate(/^[a-zA-Z0-9-_]+$/)?S.clearError():(S.setError("Fillnull value can only use alphanumeric characters and underscores"),o=!0),N.isEmpty())N.clearError();else try{new RegExp(N.getValue()),N.clearError()}catch(t){N.setError("Invalid regular expression"),o=!0}if(!o){var s=E.isEditable()?"add":"edit",i={key_field:F.getValue(),case_sensitive:V.getValue(),ignore_values:JSON.stringify(C.getValue()),fillnull:S.getValue(),validation:N.getValue(),field_type:L.getValue(),merge_method:M.getValue(),merge_order:T.getValue(),max_values:B.getValue()||2,eval_expression:O.getValue()},r=y(t,i,E.getValue(),s);e.when(r).done((function(){k(),w("section-fields"),a.hide()}))}}))}});$.setBody(D),$.show()}function w(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"section-lookups";u.html("");var s=m("conf-assetdb");e.when(s).done((function(s){var i=JSON.parse(s).entry,r=f(i),p=e('\n\t\t\t\t<div class="container">\n\t\t\t\t\t<ul class="nav nav-tabs main-tabs shared-tabcontrols-tabbar">\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-lookups">\n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Lookups</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-fields">            \n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Fields</a>        \n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li class="shared-tabcontrols-tabbase" data-section-id="section-search">            \n\t\t\t\t\t\t\t<a href="#" class="tab-label">Asset Merge Search</a>        \n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<section data-section-id="section-lookups">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Select lookup tables with asset data from individual sources to include within the merge process.</p>\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-lookup">Add Lookup</a>\n\t\t\t\t\t\t<table class="lookups-table table table-striped table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t\t<th>Lookup</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-section-id="section-fields">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Configure asset fields and how they are merged across individual lookups.</p>\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-field">Add Field</a>\n\t\t\t\t\t\t<table class="fields-table table table-striped table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th data-key="" class="col-info"><i class="icon-info"></i></th>\n\t\t\t\t\t\t\t\t\t<th>Field</th>\n\t\t\t\t\t\t\t\t\t<th>Field Type</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section data-section-id="section-search">\n\t\t\t\t\t\t<p><i class="icon-info-circle"></i> Auto generated search that merges all asset lookups according to configured fields and their respective merge settings.</p>\n\t\t\t\t\t\t<a target="_blank" href="/app/assetdb/search?s=%2FservicesNS%2Fnobody%2Fassetdb%2Fsaved%2Fsearches%2Fassetdb-lookupgen" class="btn btn-primary">Run Search <i class="icon-external"></i></a>\n\t\t\t\t\t\t<a target="_blank" href="/manager/assetdb/saved/searches?app=assetdb&search=assetdb-lookupgen" class="btn btn-edit-schedule">Edit Schedule <i class="icon-external"></i></a>\n\t\t\t\t\t\t<div class="query-container">\n\t\t\t\t\t\t\t<div class="formatted-query"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t');if(e('li[data-section-id="'.concat(t,'"]'),p).addClass("active"),e('section[data-section-id="'.concat(t,'"]'),p).addClass("active"),e("li",p).on("click",(function(){e("li",p).removeClass("active"),e(this).addClass("active"),e("section",p).removeClass("active");var t=e(this).attr("data-section-id");e('section[data-section-id="'.concat(t,'"]'),p).addClass("active")})),!r.length){var v='<p class="error-message"><i class="icon-warning"></i> WARNING: You must add at least one lookup to merge into the asset database!</p>';e('section[data-section-id="section-lookups"] p',p).last().after(v),e('section[data-section-id="section-search"] p',p).last().after(v)}if(i.length<2){var h='<p class="error-message"><i class="icon-warning"></i> WARNING: You must add at least one field to include in the asset database!</p>';e('section[data-section-id="section-fields"] p',p).last().after(h),e('section[data-section-id="section-search"] p',p).last().after(h)}e(".btn-add-field",p).on("click",(function(){return _(i)})),e(".btn-add-lookup",p).on("click",(function(){return function(t){var s=e('\n            <div class="form">\n\t\t\t\t<div class="control-group shared-controls-controlgroup control-group-default">                \n\t\t\t\t\t<label class="control-label" for="control-app">App</label>                \n\t\t\t\t\t<div role="group" class="controls controls-join ">\n\t\t\t\t\t\t<div class="input-app dropdown-input"></div>\n\t\t\t\t\t</div>                                        \n\t\t\t\t</div>\n\t\t\t\t<div class="control-group shared-controls-controlgroup control-group-default">                \n\t\t\t\t\t<label class="control-label" for="control-lookup">Lookup</label>                \n\t\t\t\t\t<div role="group" class="controls controls-join ">\n\t\t\t\t\t\t<div class="input-lookup dropdown-input"></div>\n\t\t\t\t\t</div>                                        \n\t\t\t\t</div>\n            </div>');new a({id:"searchApp",preview:!0,cache:!0,search:"| rest /services/apps/local | search disabled=0 | fields title label | sort label"},{tokens:!0}),new a({id:"searchLookup",preview:!0,cache:!0,search:"| rest /services/data/lookup-table-files | search eai:acl.app=$app$ | table title | append [| rest /services/data/transforms/lookups | search eai:acl.app=$app$ | table title] | dedup title | sort title"},{tokens:!0});var i=new l({id:"inputLookupName",label:"Name"});i.getInput().prependTo(s),new d({id:"inputApp",searchWhenChanged:!0,showClearButton:!0,selectFirstChoice:!0,labelField:"label",valueField:"title",value:"$app$",managerid:"searchApp",el:e(".input-app",s)},{tokens:!0}).render();var r=new d({id:"inputLookup",searchWhenChanged:!0,showClearButton:!0,selectFirstChoice:!1,labelField:"title",valueField:"title",managerid:"searchLookup",el:e(".input-lookup",s)},{tokens:!0}).render(),c=new o({wide:!1,title:"Add Lookup",primaryButton:"Save",onRemove:function(){n.Components.getInstance("inputApp").dispose(),n.Components.getInstance("inputLookup").dispose(),n.Components.getInstance("searchApp").dispose(),n.Components.getInstance("searchLookup").dispose()},onPrimaryBtnClick:function(){var n=this,a=r.val(),o=i.getValue();if(o&&null!=o)if(i.validate(/^[a-zA-Z0-9_]+$/))if(a)if(t.findIndex((function(t){return t.name===o}))>-1)i.setError("An input with name ".concat(o," already exists"));else if(t.findIndex((function(t){return t.lookup===a}))>-1)i.setError("An input with lookup ".concat(a," already exists"));else{var l=b(t,o,a,"add");e.when(l).done((function(){k(),w("section-lookups"),n.hide()}))}else i.setError("A lookup is required");else i.setError("The input name can only contain alphanumeric characters or underscores");else i.setError("An input name is required")}});c.setBody(s),c.show()}(r)})),r.forEach((function(t){var n=e('\n\t\t\t\t\t<tr data-name="'.concat(t.name,'">\n\t\t\t\t\t\t<td>').concat(t.name,"</td>\n\t\t\t\t\t\t<td>").concat(t.lookup,'</td>\n\t\t\t\t\t\t<td><a class="adb-lookup-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t</tr>\n\t\t\t\t'));e(".adb-lookup-delete",n).on("click",(function(){return function(t,n){var a=t.findIndex((function(t){return t.name===n}));a>-1&&t.splice(a,1);var l=new o({wide:!1,title:"Remove Lookup",primaryButton:"Remove",onPrimaryBtnClick:function(){var a=this,o=b(t,n,null,"delete");e.when(o).done((function(){k(),w("section-lookups"),a.hide()}))}}),s=e("<div>Are you sure you want to remove asset lookup <i>".concat(n,"</i> from the merge process? The lookup will still exist within Splunk.</div>"));l.setBody(s),l.show()}(r,t.name)})),e(".lookups-table tbody",p).append(n)})),i.forEach((function(t){var n,a,l,s,r,c,d;if("general"!=t.name){var u=parseInt(null===(n=t.content)||void 0===n?void 0:n.key_field),v=parseInt(null===(a=t.content)||void 0===a?void 0:a.case_sensitive),h=e('\n\t\t\t\t\t<tr data-name="'.concat(t.name,'">\n\t\t\t\t\t\t<td class="expands"><a href="#"><i class="icon-triangle-down-small"></i></a></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>').concat(t.name,"</span>").concat(u?'<span class="key-tag">Key</span>':"",'\n\t\t\t\t\t\t\t<div class="more-info" style="display: none">\n\t\t\t\t\t\t\t\t<dl class="list-dotted">\n\t\t\t\t\t\t\t\t\t<dt>Key Field</dt><dd>').concat(u?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Case Sensitive</dt><dd>").concat(v?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Ignore Values</dt><dd>").concat(JSON.stringify(null===(l=t.content)||void 0===l?void 0:l.ignore_values)||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Fill Null</dt><dd>").concat((null===(s=t.content)||void 0===s?void 0:s.fillnull)||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Validation</dt><dd>").concat((null===(r=t.content)||void 0===r?void 0:r.validation)||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Eval Expression</dt><dd>").concat((null===(c=t.content)||void 0===c?void 0:c.eval_expression)||"N/A","</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>").concat(null===(d=t.content)||void 0===d?void 0:d.field_type,'</td>\n\t\t\t\t\t\t<td><a class="adb-field-edit" href="#">Edit</a> | <a class="adb-field-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t</tr>')),f=e("dl",h);"single"==t.content.field_type?(f.append("<dt>Merge Method</dt><dd>".concat(t.content.merge_method,"</dd>")),"coalesce"==t.content.merge_method&&f.append("<dt>Merge Order</dt><dd>".concat(t.content.merge_order,"</dd>"))):"multivalue"==t.content.field_type?f.append("<dt>Max Values</dt><dd>".concat(t.content.max_values,"</dd>")):"eval"==t.content.field_type&&f.append("<dt>Eval Expression</dt><dd>".concat(t.content.eval_expression,"</dd>")),e("td.expands",h).on("click",(function(){return e(this).next().find(".more-info").toggle(),e("i",this).toggleClass("icon-triangle-right-small").toggleClass("icon-triangle-down-small"),!1})),e(".adb-field-edit",h).on("click",(function(){return _(i,t)})),e(".adb-field-delete",h).on("click",(function(){return function(t,n){var a=new o({wide:!1,title:"Delete Field",primaryButton:"Delete",onPrimaryBtnClick:function(){var a=this,o=y(t,{},n,"delete");e.when(o).done((function(){k(),w("section-fields"),a.hide()}))}}),l=e("<div>Are you sure you want to delete field <i>".concat(n,"</i>?</div>"));a.setBody(l),a.show()}(i,t.name)})),e(".fields-table tbody",p).append(h)}}));var m=I(i);e.when(m).done((function(t){var n=c(t);e(".formatted-query",p).append(n)})),u.append(p)}))}function I(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],a=n.length?void 0:m("conf-assetdb");return e.when(a).then((function(e){n.length||(n=JSON.parse(e).entry);var a,o=[],l=[],s=[],i=[],r=[],c=[],d=[],u=[],p=[],v=[],h=[],m=[],g=f(n),b=g.map((function(t){var e=t.lookup;return"| `input_adb_lookup(".concat(e,")`")})),y=g.map((function(t){var e=t.lookup,n=t.name;return'source_lookup="'.concat(e,'", "').concat(n,'"')})),k=_createForOfIteratorHelper(n);try{var _=function(){var e=a.value,n=e.name,f=e.content;if("general"==n)return"continue";if(parseInt(f.key_field)&&c.push(n),f.ignore_values&&v.push("".concat(n," = if(in(").concat(n,', "').concat(JSON.parse(f.ignore_values).map((function(e){return t.escape(e)})).join('", "'),'"), null(), ').concat(n,")")),null!=f&&f.fillnull&&u.push("".concat(n," = if(isnull(").concat(n,'), "').concat(f.fillnull,'", ').concat(n,")")),f.validation&&p.push("".concat(n,"=mvfilter(match(").concat(n,', "').concat(f.validation,'"))')),f.eval_expression&&r.push("".concat(n," = ").concat(f.eval_expression)),parseInt(f.case_sensitive)||h.push(n),"single"==f.field_type)if("latest"==f.merge_method)i.push("latest(".concat(n,") as ").concat(n));else if("coalesce"==f.merge_method){o.push("{source}_".concat(n," = ").concat(n));var g=f.merge_order.split(",");i=i.concat(g.map((function(t){return"latest(".concat(t,"_").concat(n,") as ").concat(t,"_").concat(n)})));var b=g.map((function(t){return"'".concat(t,"_").concat(n,"'")}));l.push("".concat(n," = coalesce(").concat(b.join(", "),")"))}else i.push("".concat(f.merge_method,"(").concat(n,") as ").concat(n));else"multivalue"==f.field_type&&(s.push(n),i.push("values(".concat(n,") as ").concat(n)),m.push("".concat(n," = mvindex(").concat(n,",0,").concat(parseInt(f.max_values)-1,")")));d.push(n)};for(k.s();!(a=k.n()).done;)_()}catch(t){k.e(t)}finally{k.f()}var w="";return b.length&&(w+=b.join("\n")),s.length&&(w+="\n```### Split multivalue fields ###```"+"\n| foreach ".concat(s.join(", "),' [eval <<FIELD>>=split(<<FIELD>>, "|")]')),h.length&&(w+="\n```### Convert case insensitive fields to lowercase ###```"+"\n| foreach ".concat(h.join(", ")," [eval <<FIELD>>=lower(<<FIELD>>)]")),p.length&&(w+="\n```### Validate field values ###```"+"\n| eval ".concat(p.join(", "))),v.length&&(w+="\n```### Ignore values ###```"+"\n| eval ".concat(v.join(" "))),y.length&&(w+="\n```### Map source lookup to source name ###```"+"\n| eval source=case(".concat(y.join(", "),")")),u.length&&(w+="\n```### Fill null values ###```"+"\n| eval ".concat(u.join(", "))),r.length&&(w+="\n```### Eval expression fields ###```"+"\n| eval ".concat(r.join(", "))),o.length&&(w+="\n```### Create lookup specific fields for priority based coalesce ###```"+"\n| eval ".concat(o.join(", "))),c.length&&(w+="\n```### Shallow merge assets with matching key fields (using basic stats) ###```\n| eval _key = "+(1==c.length?c[0]:"mvjoin(mvdedup(mvappend(".concat(c.join(", "),')), "::")'))),w+="\n| search _key=*",i.length&&(w+="\n| stats values(source) as source, values(source_lookup) as source_lookup, ".concat(i.join(", ")," by _key")),c.length&&(w+="\n```### Deep merge assets with matching key fields (using custom command) ###```\n| eval _key = "+(1==c.length?c[0]:"mvappend(".concat(c.join(", "),")"))),w+="\n| adbmerge max_keys=25",w+='\n| eval _key = md5(mvjoin(asset, "::"))',i.length&&(w+="\n| stats values(asset) as asset, values(source) as source, values(source_lookup) as source_lookup, ".concat(i.join(", ")," by _key")),m.length&&(w+="\n```### Trim multivalue fields ###```"+"\n| eval ".concat(m.join(", "))),l.length&&(w+="\n```### Define coalesce fields based on lookup priority ###```"+"\n| eval ".concat(l.join(", "))),d.length&&(w+="\n```### Output to KV store ###```"+"\n| table _key, asset, source, source_lookup, ".concat(d.join(", "))),w+="\n| outputlookup assetdb"}))}w()}));