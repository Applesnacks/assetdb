"use strict";require(["underscore","jquery","splunkjs/mvc","splunkjs/mvc/searchmanager","/static/app/assetdb/js/modal.min.js","/static/app/assetdb/js/textInput.min.js","/static/app/assetdb/js/radioInput.min.js","/static/app/assetdb/js/spinnerInput.min.js","/static/app/assetdb/js/multiselectInput.min.js","splunkjs/mvc/simplexml/ready!"],(function(t,e,n,a,l,o,i,c,s){$el=e("#ab_config");var d,u="/servicesNS/nobody/assetdb/configs/",r=n.createService();function p(t){var e=u+t;return r.get(e,{},(function(t,e){})).promise()}function v(t,e){var n=u+t;return r.post(n,e,(function(t,e){})).promise()}function g(){var t,a,d,u,r,p,g,m,f,b,y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_=new o({id:"inputFieldName",label:"Field Name",editable:null==y||!y.name,value:(null==y?void 0:y.name)||""}),w=new i({id:"inputKeyField",label:"Key Field",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==y||null===(t=y.content)||void 0===t?void 0:t.key_field)||0,help:"Key fields define a unique asset"}),k=new i({id:"inputCaseSensitive",label:"Case Sensitive",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==y||null===(a=y.content)||void 0===a?void 0:a.case_sensitive)||0,help:"If No, field values are converted to lowercase"}),I=new o({id:"inputIgnoreValues",label:"Ignore Values",value:(null==y||null===(d=y.content)||void 0===d?void 0:d.ignore_values)||"",help:"[Optional] A comma separated list of values to ignore"}),j=new o({id:"inputFillnull",label:"Fill Null",value:(null==y||null===(u=y.content)||void 0===u?void 0:u.fillnull)||"",help:"[Optional] Fill null entries with a static value"}),x=new i({id:"inputType",label:"Type",choices:[{label:"Single",value:"single"},{label:"Multivalue",value:"multivalue"},{label:"Eval",value:"eval"}],value:(null==y||null===(r=y.content)||void 0===r?void 0:r.type)||"single",help:"Use a single value, keep all unique entries as a multivalue, or use an eval expression to define this field"});parseInt(null==y||null===(p=y.content)||void 0===p?void 0:p.key_field)&&x.disable();var V=new i({id:"inputMergeMethod",label:"Merge Method",choices:[{label:"Latest",value:"latest"},{label:"Coalesce",value:"coalesce"}],value:(null==y||null===(g=y.content)||void 0===g?void 0:g.merge_method)||"latest",help:"Either take the most recent value or define a precedence based on the source data"}),E=new s({id:"inputMergeOrder",label:"Merge Order",choices:[{label:"test1",value:"test1"},{label:"test2",value:"test2"},{label:"test3",value:"test3"}],value:(null==y||null===(m=y.content)||void 0===m?void 0:m.merge_order)||[],help:"[Optional] Define the precedence of the source data; if no precendence is provided, a random order is used"}),F=new c({id:"inputMaxValues",label:"Max Values",value:(null==y||null===(f=y.content)||void 0===f?void 0:f.max_values)||10,help:"The maximum number of values to store as a multivalue"}),N=new o({id:"inputEvalExp",label:"Eval Expression",value:(null==y||null===(b=y.content)||void 0===b?void 0:b.eval_expression)||"",help:'An SPL eval expression, example: replace(field1, "[^w]", "")'});$form=e('\n            <div class="form-horizontal">\n                <div class="input-group-base"></div>\n                <div class="input-group-toggle input-group-single"></div>\n                <div class="input-group-toggle input-group-multivalue"></div>\n                <div class="input-group-toggle input-group-eval"></div>\n            </div>'),e(".input-group-base",$form).append(_.getInput()).append(w.getInput()).append(k.getInput()).append(I.getInput()).append(j.getInput()).append(x.getInput()),e(".input-group-single",$form).append(V.getInput()).append(E.getInput()),e(".input-group-multivalue",$form).append(F.getInput()),e(".input-group-eval",$form).append(N.getInput());var $=x.getValue();e(".input-group-toggle",$form).hide(),e(".input-group-".concat($),$form).show();var M=V.getValue(),A=E.getInput();"latest"==M?A.hide():A.show(),w.getInput().on("change",(function(t,e){"1"==e.value?(x.setValue("single"),x.disable()):x.enable()})),x.getInput().on("change",(function(t,n){e(".input-group-toggle",$form).hide(),e(".input-group-".concat(n.value),$form).show()})),V.getInput().on("change",(function(t,e){var n=E.getInput();"latest"==e.value?n.hide():n.show()}));var S=new l({wide:!0,title:y?"Edit Field":"Add Field",primaryButton:"Save",onRemove:function(){n.Components.getInstance(E.getId()).dispose()},onPrimaryBtnClick:function(){var t=this;if(_.isEditable()){if(!/^\w+$/.test(_.getValue()))return void _.setError("Field name can only use alphanumeric characters and underscores")}var n="conf-assetdb/",a={key_field:w.getValue(),case_sensitive:k.getValue(),ignore_values:I.getValue(),fillnull:j.getValue(),type:x.getValue(),merge_method:V.getValue(),merge_order:E.getValue(),max_values:F.getValue()||2,eval_expression:N.getValue()};_.isEditable()?a.name=_.getValue():n+=_.getValue();var l=v(n,a);e.when(l).done((function(){h(),t.hide()}))}});S.setBody($form),S.show()}function m(t){var n=new l({wide:!1,title:"Delete Field",primaryButton:"Delete",onPrimaryBtnClick:function(){var n=this,a=function(t){var e=u+t,n=r.del(e,(function(t,e){n.resolve(e)}));return n.promise()}("conf-assetdb/"+t);e.when(a).done((function(){h(),n.hide()}))}}),a=e("<div>Are you sure you want to delete field <i>".concat(t,"</i>?</div>"));n.setBody(a),n.show()}function h(){$el.html("");var t=p("conf-assetdb");e.when(t).done((function(t){var n=JSON.parse(t).entry,a=e('\n\t\t\t\t<div class="grid-container">\n\t\t\t\t\t<div class="grid-col grid-col-1">\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-field">Add Lookup</a>\n\t\t\t\t\t\t<table class="lookups-table table table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Lookup</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="grid-col grid-col-2">\n\t\t\t\t\t\t<a href="#" class="btn btn-primary btn-add-field">Add Field</a>\n\t\t\t\t\t\t<table class="fields-table table table-chrome table-row-expanding table-hover">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th data-key="" class="col-info"><i class="icon-info"></i></th>\n\t\t\t\t\t\t\t\t\t<th>Field</th>\n\t\t\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody></tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t');e(".btn-add-field",a).on("click",(function(){return g()})),n.forEach((function(t){if(console.log(t),"adb_lookups"==t.name){var n;if(null==t||null===(n=t.content)||void 0===n||!n.lookups)return;t.content.lookups.split(",").forEach((function(t){var n=e('\n\t\t\t\t\t\t\t<tr data-name="'.concat(t,'">\n\t\t\t\t\t\t\t\t<td>').concat(t,'</td>\n\t\t\t\t\t\t\t\t<td><a class="adb-field-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t'));e(".lookups-table tbody",a).append(n)}))}else{var l=parseInt(t.content.key_field),o=parseInt(t.content.case_sensitive),i=e('\n\t\t\t\t\t\t<tr data-name="'.concat(t.name,'">\n\t\t\t\t\t\t\t<td class="expands"><a href="#"><i class="icon-triangle-down-small"></i></a></td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span>').concat(t.name,"</span>").concat(l?'<span class="key-tag">Key</span>':"",'\n\t\t\t\t\t\t\t\t<div class="more-info" style="display: none">\n\t\t\t\t\t\t\t\t\t<dl class="list-dotted">\n\t\t\t\t\t\t\t\t\t\t<dt>Key Field</dt><dd>').concat(l?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t\t<dt>Case Sensitive</dt><dd>").concat(o?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t\t<dt>Ignore Values</dt><dd>").concat(t.content.ignore_values||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t\t<dt>Fill Null</dt><dd>").concat(t.content.fillnull||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>").concat(t.content.type,'</td>\n\t\t\t\t\t\t\t<td><a class="adb-field-edit" href="#">Edit</a> | <a class="adb-field-delete" href="#">Delete</a></td>\'}\n\t\t\t\t\t\t</tr>')),c=e("dl",i);"single"==t.content.type?(c.append("<dt>Merge Method</dt><dd>".concat(t.content.merge_method,"</dd>")),"coalesce"==t.content.merge_method&&c.append("<dt>Merge Order</dt><dd>".concat(t.content.merge_order,"</dd>"))):"multivalue"==t.content.type?c.append("<dt>Max Values</dt><dd>".concat(t.content.max_values,"</dd>")):"eval"==t.content.type&&c.append("<dt>Eval Expression</dt><dd>".concat(t.content.eval_expression,"</dd>")),e("td.expands",i).on("click",(function(){return e(this).next().find(".more-info").toggle(),e("i",this).toggleClass("icon-triangle-right-small").toggleClass("icon-triangle-down-small"),!1})),e(".adb-field-edit",i).on("click",(function(){return g(t)})),e(".adb-field-delete",i).on("click",(function(){return m(t.name)})),e(".fields-table tbody",a).append(i)}})),$el.append(a)}))}h(),d=p("conf-assetdb"),e.when(d).done((function(t){var e=JSON.parse(t).entry,n=[],a=[],l=[],o=[],i=[],c=[],s={},d=[],u=[],r=[];e.forEach((function(t){if(parseInt(t.content.key_field)&&i.push(t.name),t.content.ignore_values){var e=t.content.ignore_values.split(",").map((function(t){return'"'.concat(t,'"')}));d.push("".concat(t.name," = if(in(").concat(t.name,", ").concat(e.join(", "),"), null(), ").concat(t.name,")"))}if(t.content.fillnull){var p=t.content.fillnull;p in s?s[p].push(t.name):s[p]=[t.name]}if(parseInt(t.content.case_sensitive)||u.push("".concat(t.name," = lower(").concat(t.name,")")),"single"==t.content.type){if("latest"==t.content.merge_method)l.push("latest(".concat(t.name,") as ").concat(t.name));else if("coalesce"==t.content.merge_method){n.push("{adb_source}_".concat(t.name," = ").concat(t.name));var v=t.content.merge_order.split(","),g=v.map((function(e){return"latest(".concat(e,"_").concat(t.name,") as ").concat(e,"_").concat(t.name)}));l=l.concat(g);var m=v.map((function(e){return"".concat(e,"_").concat(t.name)}));a.push("".concat(t.name," = coalesce(").concat(m.join(", "),")"))}}else"multivalue"==t.content.type?(l.push("values(".concat(t.name,") as ").concat(t.name)),r.push("".concat(t.name," = mvindex(").concat(t.name,",0,").concat(parseInt(t.content.max_values)-1,")"))):"eval"==t.content.type&&o.push("".concat(t.name," = ").concat(t.content.eval_expression));c.push(t.name)}));var p="";for(k in u.length&&(p+="\n| eval ".concat(u.join(", "))),d.length&&(p+="\n| eval ".concat(d.join(", "))),i.length&&(p+="\n| eval _key = ".concat(i.join("."))),s)p+="\n| fillnull ".concat(s[k].join(" "),' value="').concat(k,'"');n.length&&(p+="\n| eval ".concat(n.join(", "))),p+="\n| stats ".concat(l.join(", ")," by _key"),r.length&&(p+="\n| eval ".concat(r.join(", "))),a.length&&(p+="\n| eval ".concat(a.join(", "))),o.length&&(p+="\n| eval ".concat(o.join(", "))),p+="\n| table _key, ".concat(c.join(", ")),console.log(p)}))}));