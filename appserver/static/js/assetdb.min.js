"use strict";require(["underscore","jquery","splunkjs/mvc","splunkjs/mvc/searchmanager","/static/app/assetdb/js/modal.min.js","/static/app/assetdb/js/textInput.min.js","/static/app/assetdb/js/radioInput.min.js","/static/app/assetdb/js/spinnerInput.min.js","/static/app/assetdb/js/multiselectInput.min.js","splunkjs/mvc/simplexml/ready!"],(function(t,e,n,a,l,o,i,c,s){$el=e("#ab_config");var d,u="/servicesNS/nobody/assetdb/configs/",r=n.createService();function p(t){var e=u+t;return r.get(e,{},(function(t,e){})).promise()}function v(t,e){var n=u+t;return r.post(n,e,(function(t,e){})).promise()}function g(){var t,a,d,u,r,p,g,m,h,b,y=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_=new o({id:"inputFieldName",label:"Field Name",editable:null==y||!y.name,value:(null==y?void 0:y.name)||""}),w=new i({id:"inputKeyField",label:"Key Field",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==y||null===(t=y.content)||void 0===t?void 0:t.key_field)||0,help:"Key fields define a unique asset"});null!=y&&null!==(a=y.content)&&void 0!==a&&a.default&&w.disable();var I=new i({id:"inputCaseSensitive",label:"Case Sensitive",choices:[{label:"Yes",value:1},{label:"No",value:0}],value:(null==y||null===(d=y.content)||void 0===d?void 0:d.case_sensitive)||0,help:"If No, field values are converted to lowercase"}),x=new o({id:"inputIgnoreValues",label:"Ignore Values",value:(null==y||null===(u=y.content)||void 0===u?void 0:u.ignore_values)||"",help:"[Optional] A comma separated list of values to ignore"}),j=new o({id:"inputFillnull",label:"Fill Null",value:(null==y||null===(r=y.content)||void 0===r?void 0:r.fillnull)||"",help:"[Optional] Fill null entries with a static value"}),k=new i({id:"inputType",label:"Type",choices:[{label:"Single",value:"single"},{label:"Multivalue",value:"multivalue"},{label:"Eval",value:"eval"}],value:(null==y||null===(p=y.content)||void 0===p?void 0:p.type)||"single",help:"Use a single value, keep all unique entries as a multivalue, or use an eval expression to define this field"});parseInt(y.content.key_field)||k.disable();var $=new i({id:"inputMergeMethod",label:"Merge Method",choices:[{label:"Latest",value:"latest"},{label:"Coalesce",value:"coalesce"}],value:(null==y||null===(g=y.content)||void 0===g?void 0:g.merge_method)||"latest",help:"Either take the most recent value or define a precedence based on the source data"}),V=new s({id:"inputMergeOrder",label:"Merge Order",choices:[{label:"test1",value:"test1"},{label:"test2",value:"test2"},{label:"test3",value:"test3"}],value:(null==y||null===(m=y.content)||void 0===m?void 0:m.merge_order)||[],help:"[Optional] Define the precedence of the source data; if no precendence is provided, a random order is used"}),E=new c({id:"inputMaxValues",label:"Max Values",value:(null==y||null===(h=y.content)||void 0===h?void 0:h.max_values)||10,help:"The maximum number of values to store as a multivalue"}),F=new o({id:"inputEvalExp",label:"Eval Expression",value:(null==y||null===(b=y.content)||void 0===b?void 0:b.eval_expression)||"",help:'An SPL eval expression, example: replace(field1, "[^w]", "")'});$form=e('\n            <div class="form-horizontal">\n                <div class="input-group-base"></div>\n                <div class="input-group-toggle input-group-single"></div>\n                <div class="input-group-toggle input-group-multivalue"></div>\n                <div class="input-group-toggle input-group-eval"></div>\n            </div>'),e(".input-group-base",$form).append(_.getInput()).append(w.getInput()).append(I.getInput()).append(x.getInput()).append(j.getInput()).append(k.getInput()),e(".input-group-single",$form).append($.getInput()).append(V.getInput()),e(".input-group-multivalue",$form).append(E.getInput()),e(".input-group-eval",$form).append(F.getInput());var N=k.getValue();e(".input-group-toggle",$form).hide(),e(".input-group-".concat(N),$form).show();var M=$.getValue(),S=V.getInput();"latest"==M?S.hide():S.show(),w.getInput().on("change",(function(t,e){"1"==e.value?(k.setValue("single"),k.disable()):k.enable()})),k.getInput().on("change",(function(t,n){e(".input-group-toggle",$form).hide(),e(".input-group-".concat(n.value),$form).show()})),$.getInput().on("change",(function(t,e){var n=V.getInput();"latest"==e.value?n.hide():n.show()}));var C=new l({wide:!0,title:y?"Edit Field":"Add Field",primaryButton:"Save",onRemove:function(){n.Components.getInstance(V.getId()).dispose()},onPrimaryBtnClick:function(){var t=this;if(_.isEditable()){if(!/^\w+$/.test(_.getValue()))return void _.setError("Field name can only use alphanumeric characters and underscores")}var n="conf-assetdb/",a={key_field:w.getValue(),case_sensitive:I.getValue(),ignore_values:x.getValue(),fillnull:j.getValue(),type:k.getValue(),merge_method:$.getValue(),merge_order:V.getValue(),max_values:E.getValue()||2,eval_expression:F.getValue()};_.isEditable()?a.name=_.getValue():n+=_.getValue();var l=v(n,a);e.when(l).done((function(){f(),t.hide()}))}});C.setBody($form),C.show()}function m(t){var n=new l({wide:!1,title:"Delete Field",primaryButton:"Delete",onPrimaryBtnClick:function(){var n=this,a=function(t){var e=u+t,n=r.del(e,(function(t,e){n.resolve(e)}));return n.promise()}("conf-assetdb/"+t);e.when(a).done((function(){f(),n.hide()}))}}),a=e("<div>Are you sure you want to delete field <i>".concat(t,"</i>?</div>"));n.setBody(a),n.show()}function f(){$el.html(""),$button=e('<a href="#" class="btn btn-primary">Add Field</a>'),$button.on("click",(function(){return g()})),$button.appendTo($el);var t=p("conf-assetdb");e.when(t).done((function(t){var n=JSON.parse(t).entry,a=e('\n\t\t\t\t<table class="table table-chrome table-row-expanding table-hover">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th data-key="" class="col-info"><i class="icon-info"></i></th>\n\t\t\t\t\t\t\t<th>Field</th>\n\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody></tbody>\n\t\t\t\t</table>');n.forEach((function(t){var n=parseInt(t.content.key_field),l=parseInt(t.content.case_sensitive);$tr=e('\n\t\t\t\t\t<tr data-name="'.concat(t.name,'">\n\t\t\t\t\t\t<td class="expands"><a href="#"><i class="icon-triangle-down-small"></i></a></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span>').concat(t.name,"</span>").concat(n?'<span class="key-tag">Key</span>':"",'\n\t\t\t\t\t\t\t<div class="more-info" style="display: none">\n\t\t\t\t\t\t\t\t<dl class="list-dotted">\n\t\t\t\t\t\t\t\t\t<dt>Key Field</dt><dd>').concat(n?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Case Sensitive</dt><dd>").concat(l?"Yes":"No","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Ignore Values</dt><dd>").concat(t.content.ignore_values||"N/A","</dd>\n\t\t\t\t\t\t\t\t\t<dt>Fill Null</dt><dd>").concat(t.content.fillnull||"N/A","</dd>\n\t\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>").concat(t.content.type,'</td>\n\t\t\t\t\t\t<td><a class="adb-field-edit" href="#">Edit</a> ').concat(t.content.default?"":'| <a class="adb-field-delete" href="#">Delete</a></td>',"\n\t\t\t\t\t</tr>"));var o=e("dl",$tr);"single"==t.content.type?(o.append("<dt>Merge Method</dt><dd>".concat(t.content.merge_method,"</dd>")),"coalesce"==t.content.merge_method&&o.append("<dt>Merge Order</dt><dd>".concat(t.content.merge_order,"</dd>"))):"multivalue"==t.content.type?o.append("<dt>Max Values</dt><dd>".concat(t.content.max_values,"</dd>")):"eval"==t.content.type&&o.append("<dt>Eval Expression</dt><dd>".concat(t.content.eval_expression,"</dd>")),e("td.expands",$tr).on("click",(function(){return e(this).next().find(".more-info").toggle(),e("i",this).toggleClass("icon-triangle-right-small").toggleClass("icon-triangle-down-small"),!1})),e(".adb-field-edit",$tr).on("click",(function(){return g(t)})),e(".adb-field-delete",$tr).on("click",(function(){return m(t.name)})),e("tbody",a).append($tr)})),$el.append(a)}))}f(),d=p("conf-assetdb"),e.when(d).done((function(t){var e=JSON.parse(t).entry,n="",a=[],l="",o=[],i=[],c={},s=[],d=[],u=[];e.forEach((function(t){if(parseInt(t.content.key_field)&&o.push(t.name),t.content.ignore_values){var e=t.content.ignore_values.split(",").map((function(t){return'"'.concat(t,'"')}));s.push("".concat(t.name," = if(in(").concat(t.name,", ").concat(e.join(", "),"), null(), ").concat(t.name,")"))}if(t.content.fillnull){var r=t.content.fillnull;r in c?c[r].push(t.name):c[r]=[t.name]}if(parseInt(t.content.case_sensitive)||d.push("".concat(t.name," = lower(").concat(t.name,")")),"single"==t.content.type){if("latest"==t.content.merge_method)a.push("latest(".concat(t.name,") as ").concat(t.name));else if("coalesce"==t.content.merge_method){var p=t.content.merge_order.split(","),v=p.map((function(e){return"".concat(e,"_").concat(t.name," = ").concat(t.name)}));n+="\n| eval ".concat(v.join(", "));var g=p.map((function(e){return"latest(".concat(e,"_").concat(t.name,") as ").concat(e,"_").concat(t.name)}));a=a.concat(g);var m=p.map((function(e){return"".concat(e,"_").concat(t.name)}));l+="\n| eval ".concat(t.name," = coalesce(").concat(m.join(", "),")")}}else"multivalue"==t.content.type?(a.push("values(".concat(t.name,") as ").concat(t.name)),u.push("".concat(t.name," = mvindex(").concat(t.name,",0,").concat(parseInt(t.content.max_values)-1,")"))):"eval"==t.content.type&&(l+="\n| eval ".concat(t.name," = ").concat(t.content.eval_expression));i.push(t.name)})),n+="\n| eval _key = ".concat(o.join(".")),console.log(u);var r="";for(k in d.length&&(r+="\n| eval ".concat(d.join(", "))),s.length&&(r+="\n| eval ".concat(s.join(", "))),c)r+="\n| fillnull ".concat(c[k].join(" "),' value="').concat(k,'"');r+=n,r+="\n| stats ".concat(a.join(", ")," by _key"),u.length&&(r+="\n| eval ".concat(u.join(", "))),r+=l,r+="\n| table _key, ".concat(i.join(", ")),console.log(r)}))}));